// Generated by CoffeeScript 1.6.3
/*
 Main Application View
 Sets up EaselJS stage / canvas
*/


(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  define(['view/DetailView', 'ParticleController'], function(DetailView, ParticleController) {
    var AppView;
    return AppView = (function() {
      function AppView(canvasId) {
        if (canvasId == null) {
          canvasId = "canvas";
        }
        this.tick = __bind(this.tick, this);
        console.log("AppView Init");
        this.stage = new createjs.Stage(canvasId);
        if (createjs.Touch.isSupported()) {
          createjs.Touch.enable(this.stage);
          this.stage.canvas.style.cursor = "none";
        }
        this.particleContainer = new createjs.Container();
        this.stage.addChild(this.particleContainer);
        this.particleControl = new ParticleController(this.particleContainer);
        this.detailView = new DetailView(this.stage.canvas.width, this.stage.canvas.height);
        this.stage.addChild(this.detailView);
        createjs.Ticker.addEventListener("tick", this.tick);
        createjs.Ticker.setFPS(60);
        createjs.Ticker.useRAF = true;
      }

      AppView.prototype.tick = function(e) {
        if (this.particleControl.physics.particles.length < 5) {
          this.particleControl.addParticle();
        }
        if (Math.random() > 0.995) {
          this.particleControl.addParticle();
        }
        this.particleControl.update();
        return this.stage.update();
      };

      AppView.prototype.resize = function(w, h) {
        this.stage.canvas.width = w;
        this.stage.canvas.height = h;
        this.detailView.resize(w, h);
        return this.particleControl.resize(w, h);
      };

      AppView.prototype.showDetail = function() {
        return this.detailView.show();
      };

      AppView.prototype.hideDetail = function() {
        return this.detailView.hide();
      };

      return AppView;

    })();
  });

}).call(this);
